---
import BaseLayout from "../../layouts/BaseLayout.astro";
import contests from "../../data/contests.json";
import { getSession } from "auth-astro/server";

import Comment from "../../components/Comment.astro";

const { CWOI_HOST } = import.meta.env;
const { problemId } = Astro.params;

interface ProblemExistenceInfo {
  contestDisplayId: string;
  contestTitle: string;
  problemDisplayId: string;
  problemTitle: string;
}

const problemExistence: ProblemExistenceInfo[] = [];

for (const c of contests) {
  for (const p of c.problems) {
    if (p.problemId === problemId) {
      problemExistence.push({
        contestDisplayId: c.contestDisplayId,
        contestTitle: c.contestTitle,
        problemDisplayId: p.displayId,
        problemTitle: p.problemTitle,
      });
    }
  }
}

const problemTitles = [
  ...new Set(problemExistence.map((p) => p.problemTitle)),
].join("/");

const session = await getSession(Astro.request);
---

<BaseLayout title={`${problemTitles}`}>
  <h2>{problemTitles} 的所有出現</h2>

  {
    problemId === "ghost" && (
      <p>註：這是 ghost 題目，所有沒有測試數據的題目都歸爲此類。</p>
    )
  }

  <ul>
    {
      problemExistence.map((p) => (
        <li>
          <a
            href={`${CWOI_HOST}/contest/${p.contestDisplayId}/problem/${p.problemDisplayId}`}
          >
            {p.contestDisplayId} {p.contestTitle} - {p.problemDisplayId}.
            {p.problemTitle}
          </a>
        </li>
      ))
    }
  </ul>

  {
    session && (
      <>
        <h2>評論</h2>
        <Comment problemId={problemId} />
      </>
    )
  }
</BaseLayout>
