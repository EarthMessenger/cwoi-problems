---
import BaseLayout from "../../layouts/BaseLayout.astro";
import ProblemTable from "../../components/ProblemTable.astro";

const getToken = async (
  cwoiHost: string,
  cwoiName: string,
  cwoiPassword: string,
) => {
  return fetch(`${cwoiHost}/api/user/login`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      login: cwoiName,
      password: cwoiPassword,
      remember: true,
    }),
  })
    .then((r) => r.json())
    .then((r) => r.token);
};

const getIdFromName = async (cwoiHost: string, name: string) => {
  return fetch(`${cwoiHost}/api/user/info/handle/${name}`)
    .then((r) => r.json())
    .then((r) => r._id);
};

const getSolvedProblems = async (name: string) => {
  const { CWOI_HOST, CWOI_NAME, CWOI_PASSWORD } = import.meta.env;
  const token = await getToken(CWOI_HOST, CWOI_NAME, CWOI_PASSWORD);
  const id = await getIdFromName(CWOI_HOST, name);

  if (!id) throw new Error("User not found.");

  return fetch(`${CWOI_HOST}/api/user/${id}/solvedProblems`, {
    headers: {
      Authorization: `Bearer ${token}`,
    },
  })
    .then((r) => r.json())
    .then((r) =>
      r
        .filter((p) => !p.cachedUrl.startsWith("/problem/"))
        .map((p) => {
          const part = p.cachedUrl.split("/");
          return `${part[2]}${part[4]}`;
        }),
    )
    .catch((e) => {
      console.error(e);
      throw new Error("Can't read the user's solvedProblems.");
    });
};

const { name } = Astro.params;
let errorMessage: unknown;
const solvedProblems = await getSolvedProblems(name).catch((e) => {
  errorMessage = e;
});
---

<BaseLayout>
  <form id="name-form">
    <input placeholder="名字" id="name-input" value={name} />
  </form>
  {errorMessage instanceof Error && <p class="red">{errorMessage.message}</p>}
  <ProblemTable solvedProblems={solvedProblems} />
</BaseLayout>

<style>
  .red {
    color: red;
  }

  input {
    margin: 0.5em 0;
  }
</style>

<script>
  const form = document.getElementById("name-form") as HTMLFormElement;
  const input = document.getElementById("name-input") as HTMLInputElement;
  form.onsubmit = (ev) => {
    if (input.value === "") location.href = "/";
    else location.href = `/solved/${input.value}`;
    return false;
  };
</script>
